package org.hyperledger.justitia.scheduler.controller;

import org.junit.Test;

import java.util.Base64;

import static org.junit.Assert.*;

public class ResponseBeanTest {
    @Test
    public void base64() {
        String ss = "ewoJImdyb3VwcyI6IHt9LAoJIm1vZF9wb2xpY3kiOiAiQWRtaW5zIiwKCSJwb2xpY2llcyI6IHsKCQkiQWRtaW5zIjogewoJCQkibW9kX3BvbGljeSI6ICJBZG1pbnMiLAoJCQkicG9saWN5IjogewoJCQkJInR5cGUiOiAxLAoJCQkJInZhbHVlIjogewoJCQkJCSJpZGVudGl0aWVzIjogWwoJCQkJCQl7CgkJCQkJCQkicHJpbmNpcGFsIjogewoJCQkJCQkJCSJtc3BfaWRlbnRpZmllciI6ICJTbHJiTVNQIiwKCQkJCQkJCQkicm9sZSI6ICJBRE1JTiIKCQkJCQkJCX0sCgkJCQkJCQkicHJpbmNpcGFsX2NsYXNzaWZpY2F0aW9uIjogIlJPTEUiCgkJCQkJCX0KCQkJCQldLAoJCQkJCSJydWxlIjogewoJCQkJCQkibl9vdXRfb2YiOiB7CgkJCQkJCQkibiI6IDEsCgkJCQkJCQkicnVsZXMiOiBbCgkJCQkJCQkJewoJCQkJCQkJCQkic2lnbmVkX2J5IjogMAoJCQkJCQkJCX0KCQkJCQkJCV0KCQkJCQkJfQoJCQkJCX0sCgkJCQkJInZlcnNpb24iOiAwCgkJCQl9CgkJCX0sCgkJCSJ2ZXJzaW9uIjogIjAiCgkJfSwKCQkiUmVhZGVycyI6IHsKCQkJIm1vZF9wb2xpY3kiOiAiQWRtaW5zIiwKCQkJInBvbGljeSI6IHsKCQkJCSJ0eXBlIjogMSwKCQkJCSJ2YWx1ZSI6IHsKCQkJCQkiaWRlbnRpdGllcyI6IFsKCQkJCQkJewoJCQkJCQkJInByaW5jaXBhbCI6IHsKCQkJCQkJCQkibXNwX2lkZW50aWZpZXIiOiAiU2xyYk1TUCIsCgkJCQkJCQkJInJvbGUiOiAiTUVNQkVSIgoJCQkJCQkJfSwKCQkJCQkJCSJwcmluY2lwYWxfY2xhc3NpZmljYXRpb24iOiAiUk9MRSIKCQkJCQkJfQoJCQkJCV0sCgkJCQkJInJ1bGUiOiB7CgkJCQkJCSJuX291dF9vZiI6IHsKCQkJCQkJCSJuIjogMSwKCQkJCQkJCSJydWxlcyI6IFsKCQkJCQkJCQl7CgkJCQkJCQkJCSJzaWduZWRfYnkiOiAwCgkJCQkJCQkJfQoJCQkJCQkJXQoJCQkJCQl9CgkJCQkJfSwKCQkJCQkidmVyc2lvbiI6IDAKCQkJCX0KCQkJfSwKCQkJInZlcnNpb24iOiAiMCIKCQl9LAoJCSJXcml0ZXJzIjogewoJCQkibW9kX3BvbGljeSI6ICJBZG1pbnMiLAoJCQkicG9saWN5IjogewoJCQkJInR5cGUiOiAxLAoJCQkJInZhbHVlIjogewoJCQkJCSJpZGVudGl0aWVzIjogWwoJCQkJCQl7CgkJCQkJCQkicHJpbmNpcGFsIjogewoJCQkJCQkJCSJtc3BfaWRlbnRpZmllciI6ICJTbHJiTVNQIiwKCQkJCQkJCQkicm9sZSI6ICJNRU1CRVIiCgkJCQkJCQl9LAoJCQkJCQkJInByaW5jaXBhbF9jbGFzc2lmaWNhdGlvbiI6ICJST0xFIgoJCQkJCQl9CgkJCQkJXSwKCQkJCQkicnVsZSI6IHsKCQkJCQkJIm5fb3V0X29mIjogewoJCQkJCQkJIm4iOiAxLAoJCQkJCQkJInJ1bGVzIjogWwoJCQkJCQkJCXsKCQkJCQkJCQkJInNpZ25lZF9ieSI6IDAKCQkJCQkJCQl9CgkJCQkJCQldCgkJCQkJCX0KCQkJCQl9LAoJCQkJCSJ2ZXJzaW9uIjogMAoJCQkJfQoJCQl9LAoJCQkidmVyc2lvbiI6ICIwIgoJCX0KCX0sCgkidmFsdWVzIjogewoJCSJNU1AiOiB7CgkJCSJtb2RfcG9saWN5IjogIkFkbWlucyIsCgkJCSJ2YWx1ZSI6IHsKCQkJCSJjb25maWciOiB7CgkJCQkJImFkbWlucyI6IFsKCQkJCQkJIkxTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVU5MYWtORFFXUkhaMEYzU1VKQlowbFNRVXQ2ZVM5TFVHVTVlR2hsUjFVelptSkJPSGhxUWsxM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDJWNlJVMEtUVUZ2UjBFeFZVVkNhRTFFVVRCb1QwMVNRWGRFWjFsRVZsRlJTVVYzWkV0aFYwWjFXak5PTVUxUk9IZEVVVmxFVmxGUlNFVjNXbFJrV0hCdllqTlZlQXBIUkVGWFFtZE9Wa0pCYjFSRU0wNXpZMjFKZFdNelZqWmhSemt4VEcxT2RtSlVSVkpOUVRoSFFURlZSVU40VFVsVk1uaDVXV2xDUlZGclRYaEhla0ZhQ2tKblRsWkNRVTFVUlcxT2FFeHVUbk5qYlVsMVl6TldObUZIT1RGTWJVNTJZbFJCWlVaM01IaFBWRUV5VFZSSmQwNXFVVEJOUkVKaFJuY3dlVTlVUVRJS1RVUnJkMDVxVVRCTlJFSmhUVWRSZUVSRVFVdENaMDVXUWtGWlZFRXdUa2xVYWtWUlRVRTBSMEV4VlVWRFFrMUlVMjFzYUdKdFpIcGtWRVZRVFVFd1J3cEJNVlZGUW5oTlIxVXpWalpoUnpreFRWSkZkMFIzV1VSV1VWRk1SWGRvVkdKSVNtbEpSVkpEVVhwRlpVMUNkMGRCTVZWRlFYZDNWbEZYVW5SaFZ6VkJDbU15ZUhsWmFUVjZaRmh3YjJJelZYVlpNamwwVFVacmQwVjNXVWhMYjFwSmVtb3dRMEZSV1VsTGIxcEplbW93UkVGUlkwUlJaMEZGUW1WTlQyWkpNRlFLV1VSQlYyaEVTM0Y1WkdwMGVESkNhekpDTTFKMWQzSTJaSEo1UWt0ME1EZHJRMnRFT1c4d2VuUXdOVFpETWxsQ1dsY3laV3RWTTNVelpEY3ZZM2hsUkFwYU9UTmhkakU0WkRSSVVHdEdjVTVPVFVWemQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQloyVkJUVUYzUjBFeFZXUkZkMFZDTDNkUlEwMUJRWGRMZDFsRUNsWlNNR3BDUTFGM1NXOUJaME5vU2xoT1ZrMHdTMmRVWkc1aWIzVkhaems0U1c0MGRXSkhibTk0WVZSM09FOWhabWt3YUV4UVVGbDNRMmRaU1V0dldra0tlbW93UlVGM1NVUlNkMEYzVWtGSlowbHJNMEZ0VjNVNEsweG5iRkpIYWtVMVpGZFFRMlF4VmxSUE5IcElOekJ3Y3pJemIxaDBiV0pWVUdORFNVVTFOd3BTV21sTGQwcEZUMnd4VkV0U2JrbGhPSGMzYUM5ck5TdFRPRk0zUTFreVlXUnVUbkJyVjFRMUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSyIKCQkJCQldLAoJCQkJCSJjcnlwdG9fY29uZmlnIjogewoJCQkJCQkiaWRlbnRpdHlfaWRlbnRpZmllcl9oYXNoX2Z1bmN0aW9uIjogIlNIQTI1NiIsCgkJCQkJCSJzaWduYXR1cmVfaGFzaF9mYW1pbHkiOiAiU0hBMiIKCQkJCQl9LAoJCQkJCSJmYWJyaWNfbm9kZV9vdXMiOiBudWxsLAoJCQkJCSJpbnRlcm1lZGlhdGVfY2VydHMiOiBbXSwKCQkJCQkibmFtZSI6ICJTbHJiTVNQIiwKCQkJCQkib3JnYW5pemF0aW9uYWxfdW5pdF9pZGVudGlmaWVycyI6IFtdLAoJCQkJCSJyZXZvY2F0aW9uX2xpc3QiOiBbXSwKCQkJCQkicm9vdF9jZXJ0cyI6IFsKCQkJCQkJIkxTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVU5WZWtORFFXWnhaMEYzU1VKQlowbFNRVTVFWTB4MFFVcEZVMVo1ZEhwSE9XeEVibmxDZEVGM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDJWNlJVMEtUVUZ2UjBFeFZVVkNhRTFFVVRCb1QwMVNRWGRFWjFsRVZsRlJTVVYzWkV0aFYwWjFXak5PTVUxUk9IZEVVVmxFVmxGUlNFVjNXbFJrV0hCdllqTlZlQXBIUkVGWFFtZE9Wa0pCYjFSRU0wNXpZMjFKZFdNelZqWmhSemt4VEcxT2RtSlVSVkpOUVRoSFFURlZSVU40VFVsVk1uaDVXV2xDUlZGclRYaEhla0ZhQ2tKblRsWkNRVTFVUlcxT2FFeHVUbk5qYlVsMVl6TldObUZIT1RGTWJVNTJZbFJCWlVaM01IaFBWRUV5VFZSSmQwNXFVVEJOUkVKaFJuY3dlVTlVUVRJS1RVUnJkMDVxVVRCTlJFSmhUVWh6ZUVSRVFVdENaMDVXUWtGWlZFRXdUa2xVYWtWUlRVRTBSMEV4VlVWRFFrMUlVMjFzYUdKdFpIcGtWRVZRVFVFd1J3cEJNVlZGUW5oTlIxVXpWalpoUnpreFRWSm5kMFpuV1VSV1VWRkxSWGM1ZW1KSVNtbE1iazR4Wlcxb2RtUlROV3BpTWpCNFJWUkJVRUpuVGxaQ1FYTlVDa05HVG5OamJVbG5Va1ZLUkUxU2MzZEhVVmxFVmxGUlJFVjRTbXBaVXpWNllraEthVXh1VGpGbGJXaDJaRk0xYW1JeU1IZFhWRUZVUW1kamNXaHJhazhLVUZGSlFrSm5aM0ZvYTJwUFVGRk5Ra0ozVGtOQlFWSXJSa292TUVjNFRGcEtWMVZyWTFKcGFrVmlURGRxYzJaQlFYbE1WMG92TWxOd1dGcFVTSEV4ZGdwckwzRnNSRGRUUVZGNFRtcEljVUp3V2xoek5rdzFiRXQwYjNaTGFFUTJhMmN5WjNWSWQzbFpURVZ0ZFc4eE9IZFlWRUZQUW1kT1ZraFJPRUpCWmpoRkNrSkJUVU5CWVZsM1JIZFpSRlpTTUd4Q1FXZDNRbWRaUlZaU01HeEJSRUZRUW1kT1ZraFNUVUpCWmpoRlFsUkJSRUZSU0M5TlEydEhRVEZWWkVSblVXa0tRa05CUzBWc1l6RlZlbEZ4UWs0eVpIVnBOR0ZFTTNkcFptazFjMkZsYWtad1VFUjNOWEFyVEZORmN6ZzVha0ZMUW1kbmNXaHJhazlRVVZGRVFXZE9TQXBCUkVKRlFXbENlUzh6ZVVab1ZWcFJNMkp2WlVOd1FURjBNVWhUU1Zoak0xSXdWbk1yT1hNd1FUQjZNVEE0TlM5eVowbG5RMWhaWmpWNGNrbG5RWGxyQ2xwMVJYWTJUbkUxYUZOcllrWmhPRUp1VjBSTVNIZFVRV0pCWkdGUWVWVTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsiCgkJCQkJXSwKCQkJCQkic2lnbmluZ19pZGVudGl0eSI6IG51bGwsCgkJCQkJInRsc19pbnRlcm1lZGlhdGVfY2VydHMiOiBbXSwKCQkJCQkidGxzX3Jvb3RfY2VydHMiOiBbCgkJCQkJCSJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VOWGFrTkRRV2REWjBGM1NVSkJaMGxTUVU5cFVXZFRSek5MYnpnd01WVm1jVWRHUTNoR2JVRjNRMmRaU1V0dldrbDZhakJGUVhkSmQyWnFSVTBLVFVGdlIwRXhWVVZDYUUxRVVUQm9UMDFTUVhkRVoxbEVWbEZSU1VWM1pFdGhWMFoxV2pOT01VMVJPSGRFVVZsRVZsRlJTRVYzV2xSa1dIQnZZak5WZUFwSFJFRlhRbWRPVmtKQmIxUkVNMDV6WTIxSmRXTXpWalpoUnpreFRHMU9kbUpVUlZKTlFUaEhRVEZWUlVONFRVbFZNbmg1V1dsQ1JWRnJUWGhJYWtGakNrSm5UbFpDUVUxVVJsaFNjMk15VG1oTWJrNXpZMjFKZFdNelZqWmhSemt4VEcxT2RtSlVRV1ZHZHpCNFQxUkJNazFVU1hkT2FsRXdUVVJDWVVaM01Ia0tUMVJCTWsxRWEzZE9hbEV3VFVSQ1lVMUlOSGhFUkVGTFFtZE9Wa0pCV1ZSQk1FNUpWR3BGVVUxQk5FZEJNVlZGUTBKTlNGTnRiR2hpYldSNlpGUkZVQXBOUVRCSFFURlZSVUo0VFVkVk0xWTJZVWM1TVUxU1ozZEdaMWxFVmxGUlMwVjNPWHBpU0VwcFRHNU9NV1Z0YUhaa1V6VnFZakl3ZUVWVVFWQkNaMDVXQ2tKQmMxUkRSazV6WTIxSloxSkZTa1JOVWpSM1NFRlpSRlpSVVVSRmVGWXdZa2hPYWxsVE5YcGlTRXBwVEc1T01XVnRhSFprVXpWcVlqSXdkMWRVUVZRS1FtZGpjV2hyYWs5UVVVbENRbWRuY1docmFrOVFVVTFDUW5kT1EwRkJVbmc0TlhoR1dWZ3dhQ3QyVVVocWJYbG5jRUZTTUVWc1VsVnhTR3hOTjNJcmFBcFFUa0pDWnpkc0wweDJiazF5WlVZd09VOXhhR1pVYzNaa2ExSnhlREk0U0RWVVVHNUpWbTlMTTNWVGJWa3hLelpwYml0V2J6RTRkMWhVUVU5Q1owNVdDa2hST0VKQlpqaEZRa0ZOUTBGaFdYZEVkMWxFVmxJd2JFSkJaM2RDWjFsRlZsSXdiRUZFUVZCQ1owNVdTRkpOUWtGbU9FVkNWRUZFUVZGSUwwMURhMGNLUVRGVlpFUm5VV2xDUTBKT1lqTmxMMlJMVkhGU1IwSm9kWHAxV2xjeEx6ZG9ZMHhhU1Rka2FsRlphWE4yVkM5NFprOHlSazFxUVV0Q1oyZHhhR3RxVHdwUVVWRkVRV2RPU1VGRVFrWkJhVVZCTXpCeVpHbHdTMlpPUTIxTFZVdHNkSFJ0VG1kVlZIVlRLM0JNYTA5eVdYUkhUakZaUVVFNFZVeGFPRU5KUWxNNENuUnRSV3hNWjFZemVDdEVSSFJUT1RWV2NFRnFXRGw2T0V0d05ETklja3hGWkdkNk4yUlZTMWdLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89IgoJCQkJCV0KCQkJCX0sCgkJCQkidHlwZSI6IDAKCQkJfSwKCQkJInZlcnNpb24iOiAiMCIKCQl9Cgl9LAoJInZlcnNpb24iOiAiMCIKfQo=";
        byte[] decode = Base64.getDecoder().decode(ss);
        String s = new String(decode);
        System.out.println(s);
    }

}