<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hyperledger.justitia.common.face.dao.mapper.CouchdbMapper" >
  <resultMap id="BaseResultMap" type="org.hyperledger.justitia.common.bean.node.CouchdbInfo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="INTEGER" />
    <result column="container_id" property="containerId" jdbcType="VARCHAR" />
    <result column="msp_id" property="mspId" jdbcType="VARCHAR" />
    <result column="tls_enable" property="tlsEnable" jdbcType="BIT" />
    <result column="double_verify" property="doubleVerify" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ip, port, container_id, msp_id, tls_enable, double_verify
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from couchdb
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from couchdb
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.hyperledger.justitia.common.bean.node.CouchdbInfo" >
    insert into couchdb (id, ip, port, 
      container_id, msp_id, tls_enable, 
      double_verify)
    values (#{id,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, 
      #{containerId,jdbcType=VARCHAR}, #{mspId,jdbcType=VARCHAR}, #{tlsEnable,jdbcType=BIT}, 
      #{doubleVerify,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.hyperledger.justitia.common.bean.node.CouchdbInfo" >
    insert into couchdb
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="containerId != null" >
        container_id,
      </if>
      <if test="mspId != null" >
        msp_id,
      </if>
      <if test="tlsEnable != null" >
        tls_enable,
      </if>
      <if test="doubleVerify != null" >
        double_verify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="containerId != null" >
        #{containerId,jdbcType=VARCHAR},
      </if>
      <if test="mspId != null" >
        #{mspId,jdbcType=VARCHAR},
      </if>
      <if test="tlsEnable != null" >
        #{tlsEnable,jdbcType=BIT},
      </if>
      <if test="doubleVerify != null" >
        #{doubleVerify,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.hyperledger.justitia.common.bean.node.CouchdbInfo" >
    update couchdb
    <set >
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="containerId != null" >
        container_id = #{containerId,jdbcType=VARCHAR},
      </if>
      <if test="mspId != null" >
        msp_id = #{mspId,jdbcType=VARCHAR},
      </if>
      <if test="tlsEnable != null" >
        tls_enable = #{tlsEnable,jdbcType=BIT},
      </if>
      <if test="doubleVerify != null" >
        double_verify = #{doubleVerify,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hyperledger.justitia.common.bean.node.CouchdbInfo" >
    update couchdb
    set ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      container_id = #{containerId,jdbcType=VARCHAR},
      msp_id = #{mspId,jdbcType=VARCHAR},
      tls_enable = #{tlsEnable,jdbcType=BIT},
      double_verify = #{doubleVerify,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>